"""
Script de teste r√°pido para verificar se o m√≥dulo est√° funcionando
"""

from trello_client import TrelloClient

def testar_conexao():
    """Testa se as credenciais est√£o corretas"""
    try:
        trello = TrelloClient()
        print("‚úÖ Cliente Trello inicializado com sucesso!")
        print(f"   API Key: {trello.api_key[:10]}...")
        print(f"   List ID: {trello.list_id}")
        return True
    except ValueError as e:
        print(f"‚ùå Erro: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

def testar_email():
    """Testa a gera√ß√£o de email"""
    trello = TrelloClient()
    
    testes = [
        "Jo√£o Silva",
        "Maria Santos",
        "Pedro Oliveira Junior"
    ]
    
    print("\nüìß Testando gera√ß√£o de emails:")
    for nome in testes:
        email = trello.gerar_email(nome)
        print(f"   {nome} ‚Üí {email}")

if __name__ == "__main__":
    print("=" * 60)
    print("TESTE DO M√ìDULO TRELLO")
    print("=" * 60)
    
    if testar_conexao():
        testar_email()
        
        print("\n" + "=" * 60)
        print("‚úÖ M√≥dulo funcionando corretamente!")
        print("=" * 60)
        print("\nPr√≥ximos passos:")
        print("1. Execute: python examples/exemplo_basico.py")
        print("2. Execute: python examples/exemplo_completo.py")
    else:
        print("\n" + "=" * 60)
        print("‚ùå Configure o arquivo .env antes de continuar")
        print("=" * 60)
        print("\nInstru√ß√µes:")
        print("1. Copie .env.example para .env")
        print("2. Preencha com suas credenciais do Trello")
        print("3. Execute este teste novamente")